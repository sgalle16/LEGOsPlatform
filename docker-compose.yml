services:

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: sgalle16/legosplatform:frontend
    ports:
      - "4200:4200"
    networks:
      - lego-network

  api-gateway:
    container_name: api_gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: sgalle16/legosplatform:api-gateway
    ports:
      - "3000:3000"
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      - kafka
    networks:
      - lego-network

  api-tickets:
    container_name: api_tickets
    build:
      context: ./api-tickets
      dockerfile: Dockerfile
    image: sgalle16/legosplatform:api-tickets
    ports:
      - "5002:5002"
    networks:
      - lego-network

  tickets-manage-ms:
    container_name: tickets_manage
    build: 
      context: ./tickets-manage-ms
      dockerfile: Dockerfile
    image: sgalle16/legosplatform:tickets-manage-ms
    ports:
      - "5000:5000"
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /root/.config/gcloud/application_default_credentials.json
      GOOGLE_CLOUD_PROJECT: auth-5b07d
    volumes:
      - ~/.config/gcloud/application_default_credentials.json:/root/.config/gcloud/application_default_credentials.json:ro
    networks:
      - lego-network
    depends_on:
      - api-gateway
      - frontend
      - api-tickets

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - lego-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - lego-network


networks:
  lego-network:
    name: lego-network
    driver: bridge

